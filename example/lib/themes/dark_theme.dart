import 'package:flutter/material.dart';
import 'package:responsive_sizer/responsive_sizer.dart';

var darkTheme = ThemeData(
  useMaterial3: true,
  visualDensity: VisualDensity.compact,
  applyElevationOverlayColor: true,
  brightness: Brightness.dark,
  materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
  canvasColor: const Color(0xFF1B1B1F),
  splashColor: const Color(0x40CCCCCC),
  primaryColor: const Color(0xFF1B1B1F),
  primaryColorDark: const Color(0xFF000000),
  primaryColorLight: const Color(0xFF9E9E9E),
  secondaryHeaderColor: const Color(0xFF616161),
  scaffoldBackgroundColor: const Color(0xFF1B1B1F),
  cardColor: const Color(0xFF1B1B1F),
  dialogBackgroundColor: const Color(0xFF1B1B1F),
  disabledColor: const Color(0x62FFFFFF),
  dividerColor: const Color(0x1FE5E1E6),
  focusColor: const Color(0x1FFFFFFF),
  highlightColor: const Color(0x40CCCCCC),
  hintColor: const Color(0x99FFFFFF),
  hoverColor: const Color(0x0AFFFFFF),
  indicatorColor: const Color(0xFFE5E1E6),
  shadowColor: const Color(0xFF000000),
  unselectedWidgetColor: const Color(0xB3FFFFFF),
  colorScheme: _colorScheme,
  primaryIconTheme: const IconThemeData(color: Color(0xFFFFFFFF)),
  iconTheme: const IconThemeData(color: Color(0xFFFFFFFF)),
  primaryTextTheme: TextTheme(
    bodyLarge: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 16.dp,
      inherit: false,
      letterSpacing: 0.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    bodyMedium: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 14.dp,
      inherit: false,
      letterSpacing: 0.25,
      textBaseline: TextBaseline.alphabetic,
    ),
    bodySmall: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 12.dp,
      inherit: false,
      letterSpacing: 0.4,
      textBaseline: TextBaseline.alphabetic,
    ),
    displayLarge: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w300,
      fontSize: 96.dp,
      inherit: false,
      letterSpacing: -1.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    displayMedium: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w300,
      fontSize: 60.dp,
      inherit: false,
      letterSpacing: -0.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    displaySmall: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 48.dp,
      inherit: false,
      letterSpacing: 0,
      textBaseline: TextBaseline.alphabetic,
    ),
    headlineLarge: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 40.dp,
      inherit: false,
      letterSpacing: 0.25,
      textBaseline: TextBaseline.alphabetic,
    ),
    headlineMedium: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 34.dp,
      inherit: false,
      letterSpacing: 0.25,
      textBaseline: TextBaseline.alphabetic,
    ),
    headlineSmall: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 24.dp,
      inherit: false,
      letterSpacing: 0,
      textBaseline: TextBaseline.alphabetic,
    ),
    labelLarge: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w500,
      fontSize: 14.dp,
      inherit: false,
      letterSpacing: 1.25,
      textBaseline: TextBaseline.alphabetic,
    ),
    labelMedium: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 11.dp,
      inherit: false,
      letterSpacing: 1.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    labelSmall: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 10.dp,
      inherit: false,
      letterSpacing: 1.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    titleLarge: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w500,
      fontSize: 20.dp,
      inherit: false,
      letterSpacing: 0.15,
      textBaseline: TextBaseline.alphabetic,
    ),
    titleMedium: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 16.dp,
      inherit: false,
      letterSpacing: 0.15,
      textBaseline: TextBaseline.alphabetic,
    ),
    titleSmall: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w500,
      fontSize: 14.dp,
      inherit: false,
      letterSpacing: 0.1,
      textBaseline: TextBaseline.alphabetic,
    ),
  ),
  textTheme: TextTheme(
    bodyLarge: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 16.dp,
      inherit: false,
      letterSpacing: 0.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    bodyMedium: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 14.dp,
      inherit: false,
      letterSpacing: 0.25,
      textBaseline: TextBaseline.alphabetic,
    ),
    bodySmall: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 12.dp,
      inherit: false,
      letterSpacing: 0.4,
      textBaseline: TextBaseline.alphabetic,
    ),
    displayLarge: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w300,
      fontSize: 96.dp,
      inherit: false,
      letterSpacing: -1.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    displayMedium: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w300,
      fontSize: 60.dp,
      inherit: false,
      letterSpacing: -0.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    displaySmall: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 48.dp,
      inherit: false,
      letterSpacing: 0,
      textBaseline: TextBaseline.alphabetic,
    ),
    headlineLarge: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 40.dp,
      inherit: false,
      letterSpacing: 0.25,
      textBaseline: TextBaseline.alphabetic,
    ),
    headlineMedium: TextStyle(
      color: const Color(0xB3FFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 34.dp,
      inherit: false,
      letterSpacing: 0.25,
      textBaseline: TextBaseline.alphabetic,
    ),
    headlineSmall: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 24.dp,
      inherit: false,
      letterSpacing: 0,
      textBaseline: TextBaseline.alphabetic,
    ),
    labelLarge: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w500,
      fontSize: 14.dp,
      inherit: false,
      letterSpacing: 1.25,
      textBaseline: TextBaseline.alphabetic,
    ),
    labelMedium: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 11.dp,
      inherit: false,
      letterSpacing: 1.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    labelSmall: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 10.dp,
      inherit: false,
      letterSpacing: 1.5,
      textBaseline: TextBaseline.alphabetic,
    ),
    titleLarge: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w500,
      fontSize: 20.dp,
      inherit: false,
      letterSpacing: 0.15,
      textBaseline: TextBaseline.alphabetic,
    ),
    titleMedium: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w400,
      fontSize: 16.dp,
      inherit: false,
      letterSpacing: 0.15,
      textBaseline: TextBaseline.alphabetic,
    ),
    titleSmall: TextStyle(
      color: const Color(0xFFFFFFFF),
      decoration: TextDecoration.none,
      fontWeight: FontWeight.w500,
      fontSize: 14.dp,
      inherit: false,
      letterSpacing: 0.1,
      textBaseline: TextBaseline.alphabetic,
    ),
  ),
  inputDecorationTheme: const InputDecorationTheme(
    alignLabelWithHint: false,
    filled: false,
    floatingLabelAlignment: FloatingLabelAlignment.start,
    floatingLabelBehavior: FloatingLabelBehavior.auto,
    isCollapsed: false,
    isDense: false,
  ),
  buttonTheme: ButtonThemeData(
    height: 36,
    minWidth: 88,
    layoutBehavior: ButtonBarLayoutBehavior.padded,
    textTheme: ButtonTextTheme.normal,
    alignedDropdown: false,
    padding: const EdgeInsets.symmetric(horizontal: 16.0),
    shape: const RoundedRectangleBorder(
      side: BorderSide(
        strokeAlign: -1.0,
        color: Color(0xFF000000),
        style: BorderStyle.none,
        width: 0,
      ),
      borderRadius: BorderRadius.all(Radius.elliptical(2, 2)),
    ),
    colorScheme: _colorScheme,
  ),
);

var _colorScheme = const ColorScheme(
  brightness: Brightness.dark,
  background: Color(0xFF1B1B1F),
  onBackground: Color(0xFFE5E1E6),
  primary: Color(0xFF9295F2),
  onPrimary: Color(0xFFFFFFFF),
  primaryContainer: Color(0xFF4247E8),
  onPrimaryContainer: Color(0xFF0D116D),
  inversePrimary: Color(0xFF4146E7),
  secondary: Color(0xFFC5C4DD),
  onSecondary: Color(0xFF2E2F42),
  secondaryContainer: Color(0xFF454559),
  onSecondaryContainer: Color(0xFFE2E0F9),
  error: Color(0xFFFFB4AB),
  onError: Color(0xFF690005),
  errorContainer: Color(0xFF93000A),
  onErrorContainer: Color(0xFFFFB4AB),
  surface: Color(0xFF1B1B1F),
  onSurface: Color(0xFFE5E1E6),
  surfaceTint: Color(0xFFBFC1FF),
  surfaceVariant: Color(0xFF46464F),
  onSurfaceVariant: Color(0xFFC7C5D0),
  inverseSurface: Color(0xFFE5E1E6),
  onInverseSurface: Color(0xFF313034),
  shadow: Color(0xFF000000),
  outline: Color(0xFF918f9A),
  outlineVariant: Color(0xFF46464F),
);
